# Generated by Django 3.2.18 on 2023-03-07 13:40

import core.fields
import core.models
import datetime
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0016_add_last_login_on_interactive_user'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('validity_from', core.fields.DateTimeField(db_column='ValidityFrom', default=datetime.datetime.now)),
                ('validity_to', core.fields.DateTimeField(blank=True, db_column='ValidityTo', null=True)),
                ('legacy_id', models.IntegerField(blank=True, db_column='LegacyID', null=True)),
                ('json_ext', models.JSONField(blank=True, db_column='JsonExt', null=True)),
                ('id', models.AutoField(db_column='CategoryId', primary_key=True, serialize=False)),
                ('uuid', models.CharField(db_column='CategoryUUID', default=uuid.uuid4, max_length=36, unique=True)),
                ('title', models.CharField(blank=True, db_column='Title', max_length=100, null=True)),
                ('slug', models.SlugField(blank=True, db_column='Slug', help_text='This is a label for each title which makes it easily identified', null=True, unique=True)),
            ],
            options={
                'db_table': 'tblCategory',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('validity_from', core.fields.DateTimeField(db_column='ValidityFrom', default=datetime.datetime.now)),
                ('validity_to', core.fields.DateTimeField(blank=True, db_column='ValidityTo', null=True)),
                ('legacy_id', models.IntegerField(blank=True, db_column='LegacyID', null=True)),
                ('id', models.AutoField(db_column='TicketId', primary_key=True, serialize=False)),
                ('uuid', models.CharField(db_column='TicketUUID', default=uuid.uuid4, max_length=36, unique=True)),
                ('title', models.CharField(db_column='Title', max_length=255)),
                ('description', models.TextField(blank=True, db_column='Description', max_length=255, null=True)),
                ('status', models.CharField(choices=[('W', 'Waiting'), ('T', 'Todo'), ('I', 'Inprogress'), ('R', 'Review'), ('D', 'Done')], db_column='Status', default='W', max_length=2)),
                ('priority', models.CharField(choices=[('C', 'Critical'), ('H', 'High'), ('N', 'Normal'), ('L', 'Low')], db_column='Priority', default='N', help_text='how critical is the problem C = Critical and L = Low ', max_length=2)),
                ('due_date', core.fields.DateField(blank=True, db_column='Due_Date', null=True)),
                ('category', models.ForeignKey(blank=True, db_column='CategoryID', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='ticket.category')),
            ],
            options={
                'db_table': 'tblTicket',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TicketMutation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('mutation', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='tickets', to='core.mutationlog')),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='mutations', to='ticket.ticket')),
            ],
            options={
                'db_table': 'ticket_TicketMutation',
                'managed': True,
            },
            bases=(models.Model, core.models.ObjectMutation),
        ),
        migrations.CreateModel(
            name='CategoryMutation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='mutations', to='ticket.category')),
                ('mutation', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='category', to='core.mutationlog')),
            ],
            options={
                'db_table': 'ticket_CategoryMutation',
                'managed': True,
            },
            bases=(models.Model, core.models.ObjectMutation),
        ),
    ]
